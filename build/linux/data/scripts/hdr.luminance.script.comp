#version 450 core

layout (local_size_x = 32, local_size_y = 32) in;
layout (rgba16f, binding = 0) uniform readonly image2D uTextureInput;
layout (r32f, binding = 1) uniform image2D uAverageLuminanceOutput;

float luminance(vec3 color) {
    return 0.2126f * color.r + 0.7152f * color.g + 0.0722f * color.b;
}

void main() {
    ivec2 texelFetch = ivec2(gl_GlobalInvocationID.xy);
    if (texelFetch.x == 0 && texelFetch.y == 0) {
        imageStore(uAverageLuminanceOutput, ivec2(0, 0), vec4(0, 0, 0, 0));
    }

    float luminance = luminance(imageLoad(uTextureInput, texelFetch).xyz);
    float sum = log(luminance + 0.00001);

    imageStore(uAverageLuminanceOutput, ivec2(0, 0), vec4(imageLoad(uAverageLuminanceOutput, ivec2(0, 0)).r + sum, 0, 0, 0));
}